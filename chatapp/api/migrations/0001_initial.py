# Generated by Django 4.2.7 on 2023-11-13 07:43

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("gender", models.CharField(max_length=10, null=True)),
                ("birthDate", models.DateField(default=django.utils.timezone.now)),
                ("age", models.IntegerField(default=18)),
                ("phone_number", models.CharField(max_length=10, null=True)),
                (
                    "verification_status",
                    models.CharField(default="pending", max_length=20),
                ),
                ("verification_slug", models.CharField(max_length=100, null=True)),
                ("otp", models.CharField(max_length=6, null=True)),
                ("otp_validity", models.BooleanField(default=False)),
                ("resetToken", models.CharField(default="none", max_length=50)),
                (
                    "prfImg",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_images/"
                    ),
                ),
                ("about", models.TextField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Group",
            fields=[
                ("grpid", models.AutoField(primary_key=True, serialize=False)),
                ("grpName", models.CharField(max_length=255)),
                ("grpDescription", models.TextField()),
                (
                    "grpIcon",
                    models.ImageField(blank=True, null=True, upload_to="group_icons/"),
                ),
                ("usersList", models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name="Story",
            fields=[
                ("storyId", models.AutoField(primary_key=True, serialize=False)),
                ("content", models.FileField(upload_to="story_content/")),
                ("setTime", models.DateTimeField(auto_now_add=True)),
                ("viewedBy", models.JSONField(default=dict)),
                (
                    "setBy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PersonalMsgs",
            fields=[
                ("msgId", models.AutoField(primary_key=True, serialize=False)),
                ("message", models.TextField()),
                ("sendTime", models.DateTimeField(auto_now_add=True)),
                (
                    "viewStatus",
                    models.CharField(
                        choices=[
                            ("received", "Received"),
                            ("read", "Read"),
                            ("not_received", "Not Received"),
                        ],
                        default="not_received",
                        max_length=20,
                    ),
                ),
                (
                    "senderId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GrpMsg",
            fields=[
                ("msgId", models.AutoField(primary_key=True, serialize=False)),
                ("message", models.TextField()),
                ("sendTime", models.DateTimeField(auto_now_add=True)),
                (
                    "viewStatus",
                    models.CharField(
                        choices=[
                            ("received", "Received"),
                            ("read", "Read"),
                            ("not_received", "Not Received"),
                        ],
                        default="not_received",
                        max_length=20,
                    ),
                ),
                (
                    "senderId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
